import pluginJs from '@eslint/js';
import globals from 'globals';
import reactPlugin from 'eslint-plugin-react';
import reactHooksPlugin from 'eslint-plugin-react-hooks';
import reactRefreshPlugin from 'eslint-plugin-react-refresh';
import prettierPlugin from 'eslint-plugin-prettier';
import prettier from 'eslint-config-prettier';
import importPlugin from 'eslint-plugin-import';

export default [
    {
        ignores: ['build/**', 'node_modules/**', 'dist/**'],
    },
    pluginJs.configs.recommended,
    prettier,
    {
        linterOptions: {
            reportUnusedDisableDirectives: true,
        },
    },
    {
        files: ['**/*.js', '**/*.jsx'],
        languageOptions: {
            ecmaVersion: 2021,
            sourceType: 'module',
            parserOptions: {
                ecmaFeatures: {
                    jsx: true,
                },
            },
            globals: {
                ...globals.browser,
                ...globals.es2021,
            },
        },
        plugins: {
            react: reactPlugin,
            'react-hooks': reactHooksPlugin,
            'react-refresh': reactRefreshPlugin,
            prettier: prettierPlugin,
            import: importPlugin,
        },
        rules: {
            'import/no-unresolved': 'error',
            indent: 'off',
            'import/order': 'off',
            'react/display-name': 'off',
            radix: 'off',
            eqeqeq: 'off',
            'jsx-a11y/media-has-caption': 'off',
            'react/react-in-jsx-scope': 'off',
            camelcase: 'off',
            'react/prop-types': 'off',
            semi: 'off',
            'space-before-function-paren': 'off',
            'multiline-ternary': 'off',
            'react/no-unescaped-entities': 'off',
            'react-hooks/rules-of-hooks': 'off',
            'no-unneeded-ternary': 'off',
            'no-useless-return': 'off',
            'object-shorthand': 'off',
            'react/destructuring-assignment': 'off',
            'jsx-a11y/click-events-have-key-events': 'off',
            'jsx-a11y/anchor-is-valid': 'off',
            'jsx-a11y/label-has-associated-control': 'off',
            'jsx-a11y/control-has-associated-label': 'off',
            'react/jsx-no-useless-fragment': 'off',
            'prefer-destructuring': 'off',
            'react/jsx-props-no-spreading': 'off',
            'no-underscore-dangle': 'off',
            'no-param-reassign': 'off',
            'react/jsx-filename-extension': 'off',
            'jsx-a11y/no-static-element-interactions': 'off',
            'react/no-danger': 'off',
            'class-methods-use-this': 'off',
            'react/no-array-index-key': 'off',
            'no-nested-ternary': 'off',
            'no-plusplus': 'off',
            'no-empty': 'off',
            'react/no-children-prop': 'off',
            'no-restricted-syntax': 'off',
            'react/no-access-state-in-setstate': 'off',
            'prefer-template': 'off',
            'spaced-comment': 'off',
            'import/prefer-default-export': 'off',
            'no-redeclare': 'off',
            'template-curly-spacing': 'off',
            'import/no-named-as-default-member': 'off',
            'import/no-named-as-default': 'off',
            'comma-dangle': 'off',
            'default-param-last': 'off',
            'import/extensions': 'off',
            'react/prefer-stateless-function': 'off',
            'import/no-import-module-exports': 'off',
            'react/state-in-constructor': 'off',
            'no-return-assign': 'off',
            'no-console': 'off',
            'consistent-return': 'off',
            'react/require-default-props': 'off',
            'react/default-props-match-prop-types': 'off',
            'react/no-unused-prop-types': 'off',
            'react/forbid-prop-types': 'off',
            'react/jsx-no-undef': 'error',
            'no-unsafe-optional-chaining': 'off',
            'jsx-a11y/tabindex-no-positive': 'off',
            'no-use-before-define': 'off',
            'no-shadow': 'off',
            'react/jsx-no-bind': 'off',
            'react-hooks/exhaustive-deps': 'off',
            'react/static-property-placement': 'off',
            'no-inner-declarations': 'off',
            'jsx-a11y/alt-text': 'off',
            'jsx-a11y/iframe-has-title': 'off',
            'array-callback-return': 'off',
            'jsx-a11y/no-noninteractive-element-interactions': 'off',
            'no-unreachable': 'off',
            'no-constant-condition': 'off',
            'import/no-extraneous-dependencies': 'off',
            'max-classes-per-file': 'off',
            'no-useless-escape': 'off',
            'react/no-unknown-property': 'off',
            'no-empty-pattern': 'off',
            'no-await-in-loop': 'off',
            'func-names': 'off',
            'react/self-closing-comp': 'off',
            'arrow-body-style': 'off',
            'prefer-promise-reject-errors': 'off',
            'no-promise-executor-return': 'off',
            'global-require': 'off',
            'no-constant-binary-expression': 'off',
            'no-new': 'off',
            'no-undef': 'error',

            'no-unused-expressions': 'error',
            'no-unused-vars': [
                'error',
                {
                    varsIgnorePattern: '^React$',
                    argsIgnorePattern: '^_',
                    caughtErrors: 'none',
                },
            ],
            'react/jsx-uses-vars': 'error',

            'react-refresh/only-export-components': ['off', { allowConstantExport: true }],

            'prettier/prettier': [
                'error',
                {
                    semi: true,
                    tabWidth: 4,
                    printWidth: 140,
                    singleQuote: true,
                    trailingComma: 'es5',
                    jsxBracketSameLine: true,
                    arrowParens: 'avoid',
                },
            ],
        },
        settings: {
            react: {
                version: 'detect',
            },
            'import/resolver': {
                alias: {
                    map: [['@', './src']],
                    extensions: ['.js', '.jsx', '.ts', '.tsx'],
                },
                node: {
                    extensions: ['.js', '.jsx', '.ts', '.tsx'],
                },
            },
        },
    },
];
